{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jorge da Silva\\\\Desktop\\\\stripe-payment\\\\stripe-payment\\\\src\\\\Components\\\\PaymentForm\\\\PaymentForm.js\";\nimport React, { Component } from 'react';\nimport { CardNumberElement, CardExpiryElement, CardCvcElement, injectStripe } from 'react-stripe-elements';\n\nclass PaymentForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onEmail = event => {\n      this.setState({\n        email: event.target.value\n      });\n    };\n\n    this.onReturn = event => {\n      this.setState({\n        error: \"\"\n      });\n    };\n\n    this.state = {\n      complete: false,\n      error: false,\n      token: \"\",\n      email: \"\"\n    };\n    this.submit = this.submit.bind(this);\n  }\n\n  async submit(ev) {\n    if (!this.state.email) {\n      setState({\n        emailWarn: true\n      });\n    }\n\n    let _ref = await this.props.stripe.createToken({\n      name: \"Client Numero uno\"\n    }),\n        token = _ref.token;\n\n    if (token && this.state.email) {\n      let response = await fetch(\"https://safe-springs-05829.herokuapp.com/charge\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          'token': token.id,\n          'email': this.state.email\n        })\n      });\n      if (response.ok) this.setState({\n        token: {\n          token\n        },\n        email: this.state.email\n      });\n      if (response.ok) this.setState({\n        complete: true\n      });\n    } else {\n      fetch('https://safe-springs-05829.herokuapp.com/error', {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          error: \"true\"\n        })\n      }).then(response => response.json()).then(data => {\n        this.setState({\n          error: data\n        });\n      });\n    }\n\n    ;\n  }\n\n  render() {\n    if (this.state.complete) return React.createElement(\"div\", {\n      className: \"SuccessMessage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \" Thanks for Subscribing! \"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\"));\n    if (this.state.error) return React.createElement(\"div\", {\n      className: \"errorMessage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"Something seems to have gone wrong, please try again \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"returnBtn\",\n      onClick: this.onReturn,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \" Try again \"));\n    return React.createElement(\"div\", {\n      className: \"paymentForm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      alt: \"Client Logo\",\n      src: \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRXyLJKogQcNgoLIXK9FFT5GGP5IZctPvDh5LTcm48cCH0Kmm5q&s\",\n      className: \"logo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      className: \"subtitle\",\n      id: \"top\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \" Informa\\xE7\\xE3o do Cliente \"), React.createElement(\"input\", {\n      type: \"email\",\n      className: \"emailInput\",\n      placeholder: \"E-mail\",\n      onChange: this.onEmail,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      className: \"subtitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \" Informa\\xE7\\xE3o do Cart\\xE3o \"), React.createElement(CardNumberElement, {\n      className: \"cardNumber\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }), React.createElement(CardExpiryElement, {\n      className: \"cardExpiry\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }), React.createElement(CardCvcElement, {\n      className: \"cardCvc\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"btn-submit\",\n      onClick: this.submit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"Fazer Pagamento\"));\n  }\n\n} // https://stripe.dev/react-stripe-elements/#payment-request Is this what we want? Yep confirmed.\n\n\nexport default injectStripe(PaymentForm);","map":{"version":3,"sources":["C:/Users/Jorge da Silva/Desktop/stripe-payment/stripe-payment/src/Components/PaymentForm/PaymentForm.js"],"names":["React","Component","CardNumberElement","CardExpiryElement","CardCvcElement","injectStripe","PaymentForm","constructor","props","onEmail","event","setState","email","target","value","onReturn","error","state","complete","token","submit","bind","ev","emailWarn","stripe","createToken","name","response","fetch","method","headers","body","JSON","stringify","id","ok","then","json","data","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport {CardNumberElement, CardExpiryElement, CardCvcElement, injectStripe} from 'react-stripe-elements';\r\n\r\nclass PaymentForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {complete: false,\r\n                error: false,\r\n                token: \"\",\r\n                email: \"\"};\r\n    this.submit = this.submit.bind(this); \r\n  }\r\n\r\n  onEmail = (event) => {\r\n    this.setState({email: event.target.value})\r\n  }\r\n\r\n\r\n  async submit(ev) {\r\n    if(!this.state.email) {\r\n      setState({emailWarn:true})\r\n    }\r\n    let {token} = await this.props.stripe.createToken({name: \"Client Numero uno\"});\r\n    if(token && this.state.email) {\r\n          let response = await fetch(\"https://safe-springs-05829.herokuapp.com/charge\", {\r\n          method: \"POST\",\r\n          headers: {\"Content-Type\": \"application/json\"},\r\n          body: JSON.stringify({\r\n            'token': token.id,\r\n            'email': this.state.email\r\n          })\r\n        })\r\n        if (response.ok) this.setState({token: {token},\r\n                                        email:this.state.email})\r\n        if (response.ok) this.setState({complete: true});\r\n    } else {\r\n      fetch('https://safe-springs-05829.herokuapp.com/error', {\r\n        method: 'post',\r\n        headers: {'Content-Type':'application/json'},\r\n        body: JSON.stringify({\r\n          error: \"true\"\r\n        })\r\n      })\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        this.setState({error: data})\r\n      });\r\n    };\r\n}\r\n\r\n\r\n  onReturn = (event) => {\r\n    this.setState({error:\"\"})\r\n  }\r\n\r\n  render() {\r\n    if(this.state.complete) return( \r\n    <div className=\"SuccessMessage\">\r\n      <h1> Thanks for Subscribing! </h1>\r\n      <p>\r\n        Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod\r\n        tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,\r\n        quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo\r\n        consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse\r\n        cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non\r\n        proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\r\n      </p>\r\n    </div>\r\n    )\r\n    if(this.state.error) return <div className=\"errorMessage\">\r\n      Something seems to have gone wrong, \r\n      please try again <br/>\r\n      <button className=\"returnBtn\" onClick={this.onReturn}> Try again </button>\r\n      </div>;\r\n    return (\r\n      <div className=\"paymentForm\">\r\n        <img alt=\"Client Logo\" src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRXyLJKogQcNgoLIXK9FFT5GGP5IZctPvDh5LTcm48cCH0Kmm5q&s\" className=\"logo\"/>\r\n        <h3 className=\"subtitle\" id=\"top\"> Informação do Cliente </h3>\r\n        <input type=\"email\" className=\"emailInput\" placeholder=\"E-mail\" onChange={this.onEmail}/>\r\n        <h3  className=\"subtitle\"> Informação do Cartão </h3>\r\n        <CardNumberElement className=\"cardNumber\"/>\r\n        <CardExpiryElement className=\"cardExpiry\"/>\r\n        <CardCvcElement className=\"cardCvc\"/>\r\n      <button className=\"btn-submit\" onClick={this.submit}>Fazer Pagamento</button>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n// https://stripe.dev/react-stripe-elements/#payment-request Is this what we want? Yep confirmed.\r\n\r\nexport default injectStripe(PaymentForm);"]},"metadata":{},"sourceType":"module"}